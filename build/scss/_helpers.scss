@mixin screen($sizeFrom, $sizeTo) {
  @if $sizeFrom == 'XS' or $sizeFrom == 'xs' or $sizeFrom == 1 {$sizeFrom: 1}
  @else if $sizeFrom == 'SM' or $sizeFrom == 'sm' or $sizeFrom == 2 {$sizeFrom: 2}
  @else if $sizeFrom == 'MD' or $sizeFrom == 'md' or $sizeFrom == 3 {$sizeFrom: 3}
  @else if $sizeFrom == 'LG' or $sizeFrom == 'lg' or $sizeFrom == 4 {$sizeFrom: 4}
  @else if $sizeFrom == 'XL' or $sizeFrom == 'xl' or $sizeFrom == 5 {$sizeFrom: 5}
  @else if $sizeFrom == 'XXL' or $sizeFrom == 'xxl' or $sizeFrom == 6 {$sizeFrom: 6}
  @else {$sizeFrom: 1}

  @if $sizeTo == 'XS' or $sizeTo == 'xs' or $sizeTo == 1 {$sizeTo: 1}
  @else if $sizeTo == 'SM' or $sizeTo == 'sm' or $sizeTo == 2 {$sizeTo: 2}
  @else if $sizeTo == 'MD' or $sizeTo == 'md' or $sizeTo == 3 {$sizeTo: 3}
  @else if $sizeTo == 'LG' or $sizeTo == 'lg' or $sizeTo == 4 {$sizeTo: 4}
  @else if $sizeTo == 'XL' or $sizeTo == 'xl' or $sizeTo == 5 {$sizeTo: 5}
  @else if $sizeTo == 'XXL' or $sizeTo == 'xxl' or $sizeTo == 6 {$sizeTo: 6}
  @else {$sizeTo: $sizeFrom}

  @if $sizeFrom <= 1 and $sizeTo >= 1 {
     @media (max-width: $__breakpoint_sm - 1) {
        @content;
     }
  }

  @if $sizeFrom <= 2 and $sizeTo >= 2 {
     @media (min-width: $__breakpoint_sm) and (max-width: $__breakpoint_md - 1) {
        @content;
     }
  }

  @if $sizeFrom <= 3 and $sizeTo >= 3 {
     @media (min-width: $__breakpoint_md) and (max-width: $__breakpoint_lg - 1) {
        @content;
     }
  }

  @if $sizeFrom <= 4 and $sizeTo >= 4 {
     @media (min-width: $__breakpoint_lg) and (max-width: $__breakpoint_xl - 1) {
        @content;
     }
  }

  @if $sizeFrom <= 5 and $sizeTo >= 5 {
     @media (min-width: $__breakpoint_xl) and (max-width: $__breakpoint_xxl - 1) {
        @content;
     }
  }

  @if $sizeFrom <= 6 and $sizeTo >= 6 {
     @media (min-width: $__breakpoint_xxl) {
        @content;
     }
  }
}

@mixin fillAbsolute() {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

@mixin hoverBefore() {
  position: relative;
  z-index: 1;

  &::before {
    content: '';
    @include fillAbsolute();
    z-index: -1;
    will-change: transform;
    opacity: 0;
    transition: opacity $quickTransition;
    @content;
  }

  &:hover::before {
    opacity: 1;
  }
}

@mixin focusBorder() {
  outline: none;

  &:focus {
    box-shadow: inset 0 0 0 1px $accentColor;
  }
}

@mixin iconBefore() {
   font-family: IcoFont!important;
   speak: none;
   font-style: normal;
   font-weight: 400;
   font-variant: normal;
   text-transform: none;
   white-space: nowrap;
   word-wrap: normal;
   direction: ltr;
   line-height: 1;
   -webkit-font-feature-settings: "liga";
   -webkit-font-smoothing: antialiased;
}